meta:
  import_tasks_from: pipeline.preprocess.yaml
  extract_upstream: false
  source_loader:
    module: brd_pcm

executor:
  dotted_path: ploomber.executors.Serial
  build_in_subprocess: false # do not run function tasks in a subprocess, as this causes joblib issues

tasks:
  - source: scripts/train_prep.py
    upstream: [combine_features]
    product:
      nb: "{{root}}/htmls/train_prep.html"
      X_train: "{{root}}/data/X_train.parquet"
      y_train: "{{root}}/data/y_train.parquet"
      X_test: "{{root}}/data/X_test.parquet"
      y_test: "{{root}}/data/y_test.parquet"
      imblearn_pipe: "{{root}}/models/imblearn_pipe_template.pkl"
    params:
      random_seed: "{{random_seed}}"

  - source: brd_pcm.tasks.cross_val.cross_val
    name: stratified_cv
    upstream: [train_prep]
    product:
      cross_val: "{{root}}/ml_outputs/cv_strat_split.csv"
    params:
      type: "stratified"
      random_seed: "{{random_seed}}"

  - source: brd_pcm.tasks.cross_val.cross_val
    name: random_cv
    upstream: [train_prep]
    product:
      cross_val: "{{root}}/ml_outputs/cv_random_split.csv"
    params:
      type: "random"
      random_seed: "{{random_seed}}"

  - source: scripts/train_uncal.py
    upstream: [train_prep]
    product:
      nb: "{{root}}/htmls/train_uncal.html"
      model: "{{root}}/models/uncal_model.pkl.bz2"
      predictions: "{{root}}/ml_outputs/uncal_test_set_preds.csv"
      lig_feat_names: "{{root}}/models/lig_feat_names.pkl"
      prot_feat_names: "{{root}}/models/prot_feat_names.pkl"
    params:
      random_seed: "{{random_seed}}"

  - source: scripts/train_cal.py
    upstream: [train_prep]
    product:
      nb: "{{root}}/htmls/train_cal.html"
      model: "{{root}}/models/cal_models"
      predictions: "{{root}}/ml_outputs/cal_test_set_preds.csv"
      cv_indices: "{{root}}/models/VA_cv_indices.pkl"
    params:
      random_seed: "{{random_seed}}"

  - source: scripts/train_analyze_test_set.py
    name: analyze_test_set_uncal
    upstream: [train_uncal]
    product:
      nb: "{{root}}/htmls/analyze_test_set_uncal.html"
      roc_curve: "{{root}}/ml_outputs/uncal_test_plots/roc_curve.png"
      pr_curve: "{{root}}/ml_outputs/uncal_test_plots/pr_curve.png"
      cmat: "{{root}}/ml_outputs/uncal_test_plots/uncal_cmat.png"
      conf_metrics: "{{root}}/ml_outputs/uncal_test_cmetrics.csv"
      cal_curve: "{{root}}/ml_outputs/uncal_test_plots/calibration_curve.png"

  - source: scripts/train_analyze_test_proteins.py
    name: analyze_test_proteins_uncal
    upstream: [train_uncal]
    product:
      nb: "{{root}}/htmls/analyze_test_proteins_uncal.html"
      indiv_prot_csv: "{{root}}/ml_outputs/uncal_test_by_protein.csv"
      indiv_prot_plot: "{{root}}/ml_outputs/uncal_test_plots/pred_by_proteins_all.png"
    nbconvert_export_kwargs:
      config:
        HTMLExporter:
          preprocessors: [nbconvert.preprocessors.TagRemovePreprocessor]
        TagRemovePreprocessor:
          remove_cell_tags: [dictionary]

  - source: scripts/train_analyze_test_set.py
    name: analyze_test_set_cal
    upstream: [train_cal]
    product:
      nb: "{{root}}/htmls/analyze_test_set_cal.html"
      roc_curve: "{{root}}/ml_outputs/cal_test_plots/roc_curve.png"
      pr_curve: "{{root}}/ml_outputs/cal_test_plots/pr_curve.png"
      cmat: "{{root}}/ml_outputs/cal_test_plots/cal_cmat.png"
      conf_metrics: "{{root}}/ml_outputs/cal_test_cmetrics.csv"
      cal_curve: "{{root}}/ml_outputs/cal_test_plots/calibration_curve.png"

  - source: scripts/train_analyze_test_proteins.py
    name: analyze_test_proteins_cal
    upstream: [train_cal]
    product:
      nb: "{{root}}/htmls/analyze_test_proteins_cal.html"
      indiv_prot_csv: "{{root}}/ml_outputs/cal_test_by_protein.csv"
      indiv_prot_plot: "{{root}}/ml_outputs/cal_test_plots/pred_by_proteins_all.png"
    nbconvert_export_kwargs:
      config:
        HTMLExporter:
          preprocessors: [nbconvert.preprocessors.TagRemovePreprocessor]
        TagRemovePreprocessor:
          remove_cell_tags: [dictionary]

  - source: scripts/train_analyze_misclassified.py
    name: analyze_misclassified
    upstream: [train_cal]
    product:
      nb: "{{root}}/htmls/analyze_cal_misclassified.html"
      data: "{{root}}/ml_outputs/cal_test_set_preds_detailed.csv"
    params:
      X_train_data: "{{root}}/data/X_train.parquet"
