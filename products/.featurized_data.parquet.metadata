{"timestamp": 1688028673.003598, "stored_source_code": "This file is for featurizing the data\nimport pandas as pd\nfrom pythia.pcm_tools import AddFeatures\nupstream = [\"clean\"]\nproduct = None\n# Load data and make separate dfs for ligand and protein features\ndata = pd.read_csv(str(upstream[\"clean\"][\"data\"]), index_col=0)\ndata = data[[\"Canon_SMILES\", \"Protein\", \"Murcko_SMILES\", \"Class\"]]\n# Initialise the ligand featurizer\nligand_descriptor = \"ecfp\"\nligand_params = {\"radius\": 3, \"nBits\": 1024, \"useChirality\": True}\nprotein_descriptor = \"CKSAAGP\"\nprotein_file = f\"protein_features/{protein_descriptor}.tsv\"\n# Initialise class for featurization\npcm_data = AddFeatures(\n    data,\n    smiles_col=\"Canon_SMILES\",\n    protein_col=\"Protein\",\n    class_col=\"Class\",\n    group_col=\"Murcko_SMILES\",\n)\n\n# get protein and ligand features\npcm_data.get_protein_features(protein_file, name=protein_descriptor)\npcm_data.get_ligand_features_molfeat(ligand_descriptor, feature_path=None, **ligand_params)\n\n# retain all information as this will be needed to do train-test splits!\npcm_data.combine_feats(file_out=False, drop=False)\n# Save the data\npcm_data.pcm_feats_classes.to_parquet(product[\"data\"])", "params": {}}